title: Allocate
signature: allocate(ratios)
description: |
  Allocates the amount of a Dinero object according to a list of ratios.

  Sometimes you need to split monetary values but percentages can't cut it without adding or losing pennies.
  A good example is invoicing: let's say you need to bill $1,000.03 and you want a 50% downpayment.
  If you use {@link module:Dinero~percentage percentage}, you'll get an accurate Dinero object but the amount won't be billable: you can't split a penny.
  If you round it, you'll bill a penny extra.
  With {@link module:Dinero~allocate allocate}, you can split a monetary amount then distribute the remainder as evenly as possible.

  You can use percentage style or ratio style for `ratios`: `[25, 75]` and `[1, 3]` will do the same thing.
examples:
- title: Allocate with percentage style
  code: |
    // returns an array of two Dinero objects
    // the first one with an amount of 502
    // the second one with an amount of 501
    Dinero({ amount: 1003 })
      .allocate([50, 50])
- title: Allocate with percentage style
  code: |
    // returns an array of two Dinero objects
    // the first one with an amount of 25
    // the second one with an amount of 75
    Dinero({ amount: 100 })
      .allocate([1, 3])
parameters:
- name: ratios
  type: number[]
  required: true
  description: The ratios to allocate the money to.
throws:
- type: TypeError
  description: If ratios are invalid.
response_type: Dinero[]
